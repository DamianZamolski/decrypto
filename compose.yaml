services:
  web:
    container_name: web
    build:
      context: ./web
    ports:
      - '$WEB_PORT:80'
    environment:
      - SERVER_URL=http://server
    restart: unless-stopped

  server:
    container_name: server
    build:
      context: ./server
    ports:
      - '$SERVER_PORT:80'
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=$DATABASE_INTERNAL_PORT
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
    restart: unless-stopped

  database:
    container_name: database
    image: postgres
    environment:
      - POSTGRES_DB=$DATABASE_NAME
      - POSTGRES_USER=$DATABASE_USER
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
    ports:
      - '$DATABASE_EXTERNAL_PORT:$DATABASE_INTERNAL_PORT'
    restart: unless-stopped
    volumes:
      - ./.database:/var/lib/postgresql/data

  loki:
    profiles:
      - prod
    container_name: loki
    image: grafana/loki:latest
    restart: unless-stopped

  grafana:
    profiles:
      - prod
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '$GRAFANA_PORT:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./.grafana:/var/lib/grafana
    restart: unless-stopped

  test:
    profiles:
      - test
    container_name: test
    build:
      context: ./test
    environment:
      - WEB_URL=http://web
    depends_on:
      web:
        condition: service_healthy
      server:
        condition: service_healthy
      datbase:
        condition: service_healthy
    volumes:
      - ./.test:/app/playwright-report

volumes:
  grafana-data:
